# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# DB Source URL
spring.datasource.url=ENC(vdvtDZ0LDp7fZylGJm8aLtLbk6qzZcbdjBWXutb75KP8y8p+AkcZMkTTfgf1vZRk/NKNpwEe3JSNPexPnVs86gFFFK/G/RRApcHDjRgfb8Sc8I0J/o29Gj5cOJuMRsCAkpE45/Qp4xc=)

# DB Username
spring.datasource.username=ENC(dxSeOokz7mYyX8mnITkrlbMMJimX/5ET)

# DB Password
spring.datasource.password=ENC(vq7v9ZRy2H/hrs/T3RycYFBWqNvoui1S)

# true 설정 시 JPA 쿼리문 확인 가능
spring.jpa.show-sql=true

# DDL(Create, Alter, Drop) 정의 시 DB의 고유 기능 사용 가능
spring.jpa.hibernate.ddl-auto=update

# JPA의 구현체인 Hibernate가 동작하면서 발생한 SQL의 가독성 높여줌
spring.jpa.properties.hibernate.format_sql=true
  
# Swagger (OpenApi)
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui
springdoc-swagger-ui.disable-swagger-default-url=true

# JWT
jwt.salt=ENC(Gkc7qGZlOrf23jBotBp+GZOj9BjVg3vHQTY2+iEkwHKj/hq+s4+ys6YjWvu2pAtUgdi3wkqmYDo=)
jwt.expmin=120

jasypt.encryptor.bean=jasyptStringEncryptor

# SMTP
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=LogitForSSAFY@gmail.com
spring.mail.password=ENC(YHdZ8qFcGVTRFoItWF3yZ2+c78IpYhFypHCsztlnUXAzXUpqjwsG2w==)
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# multipart 설정
spring.servlet.multipart.max-file-size: 100MB
spring.servlet.multipart.max-request-size: 100MB

# aws 설정
cloud.aws.region.static=ENC(jwZOSI2z0KIqmPOZHLg7QLkf6T1W0OdxkUwAllW/VdE=)
cloud.aws.stack.auto=false

# IAM Access key
credentials.iam.accessKey=ENC(laehvdnhAoC+da4fqfpz52e8oMrSJ0NtWuDu69R9qPHPx80P5hii1Q==)
credentials.iam.secretKey=ENC(K/6fi+5ItQmK7Ajfd0yE/FqSia7+PyI4uKSh11UM7qsY0mVIDzdMXfgWiBz2xlDCqUJpiDXbRmZ6dSBkN5ewkg==)

# S3 정보
s3.bucket=ENC(RKRKu4WvcmgcKSzMCQVCijyxsy6fgRMPzyisLmNnF2E=)
s3.region=ENC(jwZOSI2z0KIqmPOZHLg7QLkf6T1W0OdxkUwAllW/VdE=)
s3.url=ENC(L8okhiiSCBPb4rDuUtosW2tTSnyu1iHHtxpbp6nCDINce/CgTdRxKH7SdK74flaVTh+8+9ACm4HeEly+hfb61+9S4SEfWpTi)